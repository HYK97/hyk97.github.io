# restart docker-compose down && docker-compose build && docker-compose up -d
# Site
repository: Git repository where your resume will be hosted, only required if you are hosting on GitHub (eg. sproogen/modern-resume-theme)
# favicon: Directory of your favicon (eg. images/favicon.ico)(optional)

# Content configuration version
version: 2

# Personal info
name: 김현용
title: Software Engineer
email: hyeonyong737@gmail.com
# email_title: Email (Email title override)
# phone: Your phone number (optional)
# phone_title: Phone (Phone title override)
website: https://blog.naver.com/haku10_3

darkmode: false

# Social links

github_username:  HYK97
linkedin_username: 현용-김-40a33b25b


# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&s=brands&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: About Me (Use this to override about section title)
about_profile_image: images/profile.jpeg
about_content: | # this will include new lines to allow paragraphs
  - Java와 Spring을 기반으로 한 1년 차 서버 백엔드 개발자입니다. 현재 MAU 750만 명의 커머스 서비스에서 사용자가 더욱 편리하게 쇼핑할 수 있도록 추천 시스템 개발에 참여하고 있습니다. 
  - 업무를 수행하며 발견한 비효율적이고 불편한 문제점들을 적극적으로 개선하여 팀원들로부터 신뢰를 얻고, 팀에 기여하는 개발자로 성장해 나가고 있습니다.
  - 추천 서비스의 품질인 최신성, 연관도가 높은 추천데이터를 어떻게 유저에게 빠르게 전달할 수 있을까 고민하고 있습니다.
  - 사내외 스터디에 적극적으로 참여하고 주도함으로써, 제가 알고 있는 지식을 공유하고 함께 성장하는 문화를 조성하는 데 기여하고자 노력하고 있습니다.

content:
  - title: Experience
    layout: list
    content:
      - layout: left
        title: 11번가
        sub_title: 데이터 추천 개발팀 / Backend Engineer
        caption: 2023.07 ~ 현재
        link: https://www.11st.co.kr/
        quote: >
          11번가 앱/웹 내 다양한 영역에서 사용하는 추천 서비스(상품,카테고리,기획전 등) 및 파이프라인 개발
        description: | # this will include new lines to allow paragraphs #  MAU 750, 많은 영역에서 사용하는 추천 서비스를 안정적으로 운영할수 있도록 기여
          __추천 시스템 신규 운영 및 신규 api 개발__
          - 신규 추천 영역 개발 및 기존 추천 모델에 대한 A/B 테스트 진행
          
          __추천 시스템 레거시 개선__
          - 프로젝트 버전 마이그레이션 및 코드 정리
            - jdk 8 -> 21
            - spring boot 2.1.2 -> 3.2.3
          - api서버 추천 모델별 분리작업 및 kubernetes 기반 운영 마이그레이션 진행중
          
          __장애 원인 분석 (23.09)__
          - 갤럭시 Z플립5 사전판매 라이브 방송 대용량 트래픽으로 인한 서버 hang 상태 장애 원인 분석
          - 장애 재현 및 로그 분석을 통해서 원인을 파악하고 재발 방지를 위한 방법과 관련 내용을 문서화 하여 팀내 공유
          - FeignAutoConfiguration 기본 설정에 의한 http connection leak (ConnectionRequestTimeout, SocketTimeout 및 resource 반환 코드 점검) 문제로 확인
  
          __추천 admin staging 환경 구성__
          - 데이터 검증, 성능 테스트, QA 등의 작업을 안전하게 처리할 수 있는 샌드박스 환경을 구성, 이를 통해 릴리즈 배포 전에 확인하여 안정적인 운영기반 마련
          
          __추천 mab api 성능 테스트 및 가이드 작성__
          - API 서버 성능 테스트를 통해 셔플할 상품의 적정 데이터 개수를 산정하고, 사용법에 대한 가이드를 제공
          
          __추천 배치 속도 개선__
          - Hive에서 추천 데이터를 Paging Query로 가져와 Elasticsearch에 적재하는 배치 작업의 속도를 단계별로 모니터링하여 병목 지점을 파악한 후, Paging -> CursorReader로 변경하여 배치 속도를 <mark>98% 이상 개선 (5시간 -> 5분 이내)</mark>
          
          __Redis, Kafka 통합 관리도구 개발__
          - 분리망 접근과 CLI 환경의 불편함을 해소하기 위해, Redis와 Kafka 데이터를 확인할 수 있는 웹 기반 통합 관리 도구를 개발, 기존 대비 <mark>업무 효율을 80% 향상</mark>
          - 자동화 배치 성능 개선
            - no-offset 기반 reader를 구현하여 reader속도를 획기적으로 개선

          __카탈로그 속성 자동화 매칭 도구 개발__
          - 기존에 인력으로 운영 되는 업무의 일부분을 형태소 분석기와 패턴 매칭을 이용하여 카탈로그 이름에서 속성을 자동으로 추출하고 매칭하는 도구를 개발
          
          __배치 모니터링도구 개발__
          - 배치 병목 현상 원인을 파악하기 위해 코드 수정 및 재배포의 번거로움 없이, pointcut을 JVM 옵션 혹은 환경변수로 외부에서 주입받아 모니터링할 수 있는 도구를 개발하여 팀 전체 업무 효율 향상
          
          __추천 admin 리팩토링__
          - interceptor와 annotation를 활용하여 중복되는 유저 인증 로직 제거
          - 유저 정보 획득 로직 간소화를 통해 인증 서버 api <mark>호출 빈도 50% 감소</mark>
          - ajax 예외 공통 모듈을 만들어 모든 페이지가 같은 예외 알림을 노출시키고 HTTP 상태 코드별로 일관성있는 동작을 하도록 개선
  
          __추천 api 500 error 원인 파악 및 수정__
          - 지속적으로 발생하는 NullPointerException 등 예외의 원인을 파악하고 비즈니스 요구사항에 맞도록 핸들링
            - 위 과정에서 발생한 로그 [Stacktrace 누락 관련 이슈](https://velog.io/@ddh963963/JVM-Stacktrace-Optimizing)에 대해서 직접 테스트 후(jvm optimization) 결과와 해결 방법을 팀에 공유
          - 개선 전 대비 error <mark>응답률 99.5% 감소</mark>

  - title: Projects # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Electronics-used-trading-market
        link: https://honey-wisteria-a29.notion.site/Electronics-used-trading-market-24e6d21dde514c478bb5eee583dae0d4?pvs=74
        link_text: 상세 노션
        additional_links:
          - title:  중고 장터
            icon: fab fa-github
            url: https://github.com/f-lab-edu/electronics-used-trading-market
        quote: >
         중고 전자 거래 프로젝트
        description: | # this will include new lines to allow paragraphs
          - [6,700 만 건 상품 검색 기능을 MySQL 인덱스 튜닝 및 ELK 도입을 통해 기존 검색 속도보다 약 **90%** 이상 개선](https://www.notion.so/Electronics-used-trading-market-24e6d21dde514c478bb5eee583dae0d4?pvs=21)
          - [애플리케이션 배포 시 발생하는 다운타임을 롤링 배포를 통해 무중단 상태로 개선]
          - Scale-Out 으로 인한 Session 동기화 문제 Redis Session Storage를 이용해서 해결
          - [Redis, MySQL 조회 성능 및 가용성 확보를 위해 Cluster와 Replication를 통해 분산 및 HA 환경 구성](https://github.com/f-lab-edu/electronics-used-trading-market/issues/62)
          - 실시간 채팅 API 개발

  - title: Skill
    layout: list
    content:
      - layout: left
        title: Lang & Framework
        description: |
          Java, Spring Boot, MyBatis, JPA
      - title: Databases
        description: | 
          Mysql, Redis, Oracle, Elasticsearch
      - title: ETC
        description: |
          Docker, Git, Jenkins, Nginx

# Footer
#footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
# theme: modern-resume-theme (Use this is you are hosting your resume yourself)
# remote_theme: sproogen/modern-resume-theme (Use this if you are hosting your resume on GitHub)

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag

exclude : [
  "Gemfile",
  "Gemfile.lock",
  "node_modules",
  "vendor/bundle/",
  "vendor/cache/",
  "vendor/gems/",
  "vendor/ruby/",
  "lib/",
  "scripts/",
  "docker-compose.yml",
  ]
